{
  "name": "apex-ai-security-platform-backend",
  "version": "2.0.0",
  "description": "APEX AI Security Platform - Production Backend with Proactive Intelligence",
  "main": "src/server.mjs",
  "type": "module",
  "scripts": {
    "start": "node src/server.mjs",
    "dev": "nodemon src/server.mjs",
    "build": "tsc",
    "dev:ts": "node --loader ts-node/esm src/server.ts",
    "migrate": "sequelize-cli db:migrate",
    "seed": "sequelize-cli db:seed:all",
    "typecheck": "tsc --noEmit",
    "lint": "eslint . --ext .ts,.mjs,.js",
    "lint:fix": "eslint . --ext .ts,.mjs,.js --fix",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "security:audit": "npm audit",
    "security:fix": "npm audit fix",
    "docker:build": "docker build -t apex-ai-backend .",
    "docker:run": "docker run -p 5000:5000 apex-ai-backend",
    "health-check": "node test-basic.mjs",
    "setup-db": "node create-tables-postgres.mjs",
    "backup-db": "node scripts/backup-database.mjs",
    "cleanup-logs": "node scripts/cleanup-logs.mjs"
  },
  "keywords": [
    "security",
    "ai",
    "surveillance", 
    "guards",
    "dispatch",
    "real-time",
    "express",
    "api",
    "typescript",
    "websockets"
  ],
  "author": "APEX AI Security Platform",
  "license": "Proprietary",
  "repository": {
    "type": "git",
    "url": "https://github.com/apex-ai/security-platform-backend"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@sendgrid/mail": "^8.1.4",
    "axios": "^1.7.9",
    "bcryptjs": "^2.4.3",
    "chalk": "^5.4.1",
    "cors": "^2.8.5",
    "date-fns": "^3.6.0",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "express-rate-limit": "^7.4.1",
    "express-slow-down": "^2.0.3",
    "express-validator": "^7.2.1",
    "firebase-admin": "^12.7.0",
    "fs-extra": "^11.3.0",
    "helmet": "^8.0.0",
    "jsonwebtoken": "^9.0.2",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.10.0",
    "path-to-regexp": "^8.2.0",
    "pg": "^8.13.3",
    "pg-hstore": "^2.3.4",
    "sanitize-html": "^2.13.1",
    "sequelize": "^6.37.5",
    "socket.io": "^4.8.1",
    "stripe": "^17.7.0",
    "twilio": "^5.4.5",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^5.0.0",
    "sharp": "^0.33.5",
    "compression": "^1.7.4",
    "express-session": "^1.18.1",
    "redis": "^4.7.0",
    "ioredis": "^5.4.1",
    "bull": "^4.16.3",
    "node-cron": "^3.0.3",
    "apn": "^2.2.0",
    "aws-sdk": "^2.1691.0",
    "@google-cloud/text-to-speech": "^5.5.0",
    "puppeteer": "^23.11.1",
    "pdf-kit": "^0.15.0",
    "exceljs": "^4.4.0"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/express-rate-limit": "^6.0.0",
    "@types/express-session": "^1.18.0",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.11.28",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.14",
    "@types/pg": "^8.11.11",
    "@types/sharp": "^0.32.0",
    "@types/validator": "^13.11.9",
    "@typescript-eslint/eslint-plugin": "^7.11.0",
    "@typescript-eslint/parser": "^7.11.0",
    "eslint": "^8.57.0",
    "nodemon": "^3.1.4",
    "sequelize-cli": "^6.6.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3",
    "vitest": "^1.3.0",
    "@vitest/coverage-v8": "^1.3.0",
    "supertest": "^7.0.0",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.13",
    "prettier": "^3.2.5",
    "husky": "^9.1.7",
    "lint-staged": "^15.2.10"
  },
  "optionalDependencies": {
    "canvas": "^2.11.2",
    "tensorflow": "^4.21.0",
    "@tensorflow/tfjs-node": "^4.21.0"
  },
  "peerDependencies": {
    "postgresql": ">=12.0.0"
  },
  "lint-staged": {
    "*.{js,mjs,ts}": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test"
    }
  },
  "jest": {
    "testEnvironment": "node",
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/?(*.)+(spec|test).js"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,mjs}",
      "!src/**/*.test.js"
    ]
  },
  "nodemonConfig": {
    "watch": ["src", "routes", "middleware", "services"],
    "ext": "js,mjs,ts,json",
    "ignore": ["node_modules", "logs", "uploads"],
    "delay": "2"
  }
}